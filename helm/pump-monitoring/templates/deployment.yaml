apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-producer
  labels:
    {{- include "pump-monitoring.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.producer.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: pump-producer
  template:
    metadata:
      labels:
        app: pump-producer
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.global.env.MONITORING_PROMETHEUS_PORT | int }}"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - pump-producer
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: producer
          image: {{ .Values.producer.image.repository }}:{{ .Values.producer.image.tag }}
          imagePullPolicy: {{ .Values.producer.image.pullPolicy }}
          env:
            {{- include "pump-monitoring.producerEnv" . | nindent 12 }}
          ports:
            - name: metrics
              containerPort: {{ .Values.global.env.MONITORING_PROMETHEUS_PORT | int }}
            - name: http
              containerPort: {{ .Values.global.env.MONITORING_FLASK_PORT | int }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 2
          startupProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 30
          resources:
            {{- toYaml .Values.producer.resources | nindent 12 }}
          volumeMounts:
            - name: ssl-certs
              mountPath: /etc/certificate
              readOnly: true
      volumes:
        - name: ssl-certs
          secret:
            secretName: {{ .Values.global.env.KUBERNETES_CERTIFICATE_SECRET_NAME }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-producer
  labels:
    {{- include "pump-monitoring.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
    - port: {{ .Values.global.env.MONITORING_PROMETHEUS_PORT | int }}
      targetPort: metrics
      protocol: TCP
      name: metrics
    - port: {{ .Values.global.env.MONITORING_FLASK_PORT | int }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: pump-producer