# Configurações globais
global:
  env:
    # Database Configuration
    DATABASE_HOST: ${DATABASE_HOST}
    DATABASE_PORT: ${DATABASE_PORT}
    DATABASE_NAME: ${DATABASE_NAME}
    DATABASE_USER: ${DATABASE_USER}
    DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    
    # Pump Configuration
    PUMP_ID: ${PUMP_ID}
    PUMP_REPLICA_COUNT: ${PUMP_REPLICA_COUNT}
    
    # Kubernetes Configuration
    KUBERNETES_NAMESPACE: ${KUBERNETES_NAMESPACE}
    KUBERNETES_CERTIFICATE_SECRET_NAME: ${KUBERNETES_CERTIFICATE_SECRET_NAME}
    KUBERNETES_CREDENTIALS_SECRET_NAME: ${KUBERNETES_CREDENTIALS_SECRET_NAME}
    
    # Monitoring Configuration
    MONITORING_PROMETHEUS_PORT: ${MONITORING_PROMETHEUS_PORT}
    MONITORING_FLASK_PORT: ${MONITORING_FLASK_PORT}
    MONITORING_DEBUG: ${MONITORING_DEBUG}
    
    # Logging Configuration
    LOGGING_LEVEL: ${LOGGING_LEVEL}
    LOGGING_FORMAT: ${LOGGING_FORMAT}
    
    # Data Management
    DATA_RETENTION_DAYS: ${DATA_RETENTION_DAYS}
    DATA_BACKUP_ENABLED: ${DATA_BACKUP_ENABLED}
    
    # Environment
    ENVIRONMENT_TYPE: ${ENVIRONMENT_TYPE}
    ENVIRONMENT_PROFILE: ${ENVIRONMENT_PROFILE}

# Configurações do Produtor de Dados
producer:
  replicaCount: ${PUMP_REPLICA_COUNT}
  image:
    repository: pump-producer
    tag: latest
    pullPolicy: Never
  
  # Configurações de autoscaling
  autoscaling:
    enabled: true
    maxReplicas: 5
    targetCPUUtilization: 70
    targetMemoryUtilization: 80
  
  # Recursos computacionais
  resources:
    limits:
      cpu: ${PRODUCER_CPU_LIMIT}
      memory: ${PRODUCER_MEMORY_LIMIT}
    requests:
      cpu: ${PRODUCER_CPU_REQUEST}
      memory: ${PRODUCER_MEMORY_REQUEST}

# Configurações de Monitoramento
monitoring:
  alerts:
    highPressureThreshold: 3.5
    highTemperatureThreshold: 42
    vibrationThreshold: 0.8
  
  retention:
    metrics: 15d
    alerts: 30d

  dashboards:
    updateInterval: 5s

# Configurações do TimescaleDB
timescaledb-single:
  nameOverride: "timescaledb"
  fullnameOverride: "pump-monitoring-timescaledb"
  
  image:
    tag: ${TIMESCALEDB_IMAGE_TAG}
  
  replicaCount: 1
  
  patroni:
    postgresql:
      parameters:
        max_connections: ${TIMESCALEDB_MAX_CONNECTIONS}
        shared_buffers: ${TIMESCALEDB_SHARED_BUFFERS}
        ssl: "on"
        ssl_ca_file: ${SSL_CA_FILE}
        ssl_cert_file: ${SSL_CERT_FILE}
        ssl_key_file: ${SSL_KEY_FILE}
        listen_addresses: "*"
      
      pg_hba:
        - local   all             postgres                                peer
        - local   all             all                                     peer
        - host    all             all             127.0.0.1/32           scram-sha-256
        - host    all             all             ::1/128                scram-sha-256
        - hostssl all             all             0.0.0.0/0              md5
  
  persistence:
    enabled: true
    size: ${TIMESCALEDB_PERSISTENCE_SIZE}
  
  resources:
    requests:
      memory: ${TIMESCALEDB_MEMORY_REQUEST}
      cpu: ${TIMESCALEDB_CPU_REQUEST}
    limits:
      memory: ${TIMESCALEDB_MEMORY_LIMIT}
      cpu: ${TIMESCALEDB_CPU_LIMIT}
  
  tls:
    certificatesSecret: ${KUBERNETES_CERTIFICATE_SECRET_NAME}
    certificate:
      keyFile: "tls.key"
      certFile: "tls.crt"
      caFile: "ca.crt"

  service:
    primary:
      type: ClusterIP
      port: ${DATABASE_PORT}
  
  backup:
    enabled: ${DATA_BACKUP_ENABLED}

  pgBouncer:
    enabled: false

# Configurações do Grafana
# grafana:
#   extraVolumes:
#     - name: ssl-certs
#       secret:
#         secretName: ${KUBERNETES_CERTIFICATE_SECRET_NAME}

#   extraVolumeMounts:
#     - name: ssl-certs
#       mountPath: /etc/grafana/ssl
#       readOnly: true

#   adminPassword: ${GRAFANA_ADMIN_PASSWORD}
  
#   persistence:
#     enabled: true
#     size: ${GRAFANA_PERSISTENCE_SIZE}
  
#   dashboardProviders:
#     dashboardproviders.yaml:
#       apiVersion: 1
#       providers:
#       - name: 'default'
#         orgId: 1
#         folder: ''
#         type: file
#         disableDeletion: false
#         editable: true
#         options:
#           path: /var/lib/grafana/dashboards
  
#   dashboardsConfigMaps:
#     default: grafana-dashboards
  
#   datasources:
#     datasources.yaml:
#       apiVersion: 1
#       datasources:
#         - name: TimescaleDB
#           type: postgres
#           url: ${DATABASE_HOST}:${DATABASE_PORT}
#           database: ${DATABASE_NAME}
#           user: ${DATABASE_USER}
#           jsonData:
#             database: ${DATABASE_NAME}
#             sslmode: "require"
#             tlsAuthWithCACert: false  
#             tlsConfigurationMethod: "file"
#             tlsCACert: ${SSL_CA_FILE}
#             tlsClientCert: ${SSL_CERT_FILE}
#             tlsClientKey: ${SSL_KEY_FILE}
#             maxOpenConns: ${TIMESCALEDB_MAX_CONNECTIONS}
#             maxIdleConns: ${TIMESCALEDB_MAX_CONNECTIONS}
#             connMaxLifetime: 14400
#             postgresVersion: 1400
#             timescaledb: true
#           secureJsonData:
#             password: ${DATABASE_PASSWORD}